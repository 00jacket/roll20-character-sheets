-
	const attributes = ["strength", "dexterity", "constitution", "intelligence", "wisdom", "charisma"];
	const customSkills = {
		culture_alien: "Culture/Alien/",
		culture_one: "Culture/",
		culture_two: "Culture/",
		culture_three: "Culture/",
		profession: "Profession/"
	};
	const skills = {
		revised: ["administer", "connect", "exert", "fix", "heal", "know", "lead",
			"notice", "perform", "pilot", "program", "punch", "shoot", "sneak", "stab",
			"survive", "talk", "trade", "work"],
		first: ["artist", "athletics", "bureaucracy", "business", "combat_energy", "combat_gunnery",
			"combat_primitive", "combat_projectile", "combat_psitech", "combat_unarmed", "computer",
			"culture_alien", "culture_criminal", "culture_spacer", "culture_traveller", "culture_one",
			"culture_two", "culture_three", "exosuit", "gambling", "history", "instructor", "language",
			"leadership", "navigation", "perception", "persuade", "profession", "religion", "science",
			"security", "stealth", "steward", "survival", "tactics", "tech_astronautic", "tech_maltech",
			"tech_medical", "tech_postech", "tech_pretech", "tech_psitech", "vehicle_air", "vehicle_grav",
			"vehicle_land", "vehicle_space", "vehicle_water", "dummy"],
		psionic: ["biopsionics", "metapsionics", "precognition", "telekinesis", "telepathy", "teleportation"],
	};

//- We have foci in two locations, so they are outsourced to this mixin
mixin foci
	+sectionheader("show_foci", "FOCI")
	.foci.grey-box.simple-repsection
		input(type="hidden", name="attr_show_focus_details", value="1").input-details
		.class-ability
			button.display.invisible-button(type="roll", name="roll_Class_ability", value!="&{template:swn-default} {{charname=@{name}}} {{title=^{CLASS_ABILITY}}} {{desc=@{class_ability}}}")
			.display
				.name.flex
					div #[span(data-i18n="CLASS_ABILITY")]: #[span(name="attr_class")]
					label.details-button
						input(type="checkbox", name="attr_show_focus_details", value="1", checked)
						span(data-i18n="EXPAND")
				.details
					span(name="attr_class_ability")
			.edit
				.name.flex
					div #[span(data-i18n="CLASS_ABILITY")]: #[span(name="attr_class")]
					label.details-button
						input(type="checkbox", name="attr_show_focus_details", value="1", checked)
						span(data-i18n="EXPAND")
				.details
					textarea.details(name="attr_class_ability")
		.generate.flex-start.edit
			select(name="attr_generate_foci_source").generate-source
				option(value="", data-i18n="CHOOSE_FOCUS", selected)
				option(value="alert", data-i18n="ALERT")
				option(value="armsman", data-i18n="ARMSMAN")
				option(value="assassin", data-i18n="ASSASSIN")
				option(value="authority", data-i18n="AUTHORITY")
				option(value="close_combatant", data-i18n="CLOSE_COMBATANT")
				option(value="connected", data-i18n="CONNECTED")
				option(value="die_hard", data-i18n="DIE_HARD")
				option(value="diplomat", data-i18n="DIPLOMAT")
				option(value="gunslinger", data-i18n="GUNSLINGER")
				option(value="hacker", data-i18n="HACKER")
				option(value="healer", data-i18n="HEALER")
				option(value="henchkeeper", data-i18n="HENCHKEEPER")
				option(value="ironhide", data-i18n="IRONHIDE")
				option(value="psychic_training", data-i18n="PSYCHIC_TRAINING")
				option(value="savage_fray", data-i18n="SAVAGE_FRAY")
				option(value="shocking_assault", data-i18n="SHOCKING_ASSAULT")
				option(value="sniper", data-i18n="SNIPER")
				option(value="specialist", data-i18n="SPECIALIST")
				option(value="star_captain", data-i18n="STAR_CAPTAIN")
				option(value="starfarer", data-i18n="STARFARER")
				option(value="tinker", data-i18n="TINKER")
				option(value="unarmed_combatant", data-i18n="UNARMED_COMBATANT")
				option(value="unique_gift", data-i18n="UNIQUE_GIFT")
				option(value="wanderer", data-i18n="WANDERER")
				option(value="wild_psychic_talent", data-i18n="WILD_PSYCHIC_TALENT")
			span(name="attr_generate_foci_info").generate-info
			label.generate-button
				input(type="checkbox", name="attr_generate_foci_button")
				span(data-i18n="ADD")
		fieldset.repeating_foci
			button.display.invisible-button(type="roll", name="roll_Focus", value!="&{template:swn-default} {{charname=@{name}}} {{info=^{FOCUS}}} {{title=@{focus_name}}} {{desc=@{focus_description}}}")
			.display
				.name.flex
					span(name="attr_focus_name")
					span.level #[span(data-i18n="LEVEL")]-#[span(name="attr_focus_level")]
				.details
					span(name="attr_focus_description")
			.edit.flex-wrap
				input.name(type="text", name="attr_focus_name", data-i18n-placeholder="FOCUS")
				input.level(type="number", min="0", value="1", name="attr_focus_level", data-i18n-placeholder="LEVEL")
				textarea.details(name="attr_focus_description", data-i18n-placeholder="DESCRIPTION")

input(type="hidden", name="attr_homebrew_skill_list", value="revised").skills-type
input(type="hidden", name="attr_setting_super_type", value="psionics").super-type
input(type="hidden", name="attr_setting_foci_location", value="left").foci-loc
input(type="hidden", name="attr_setting_skill_query", value="hover").skills-query

//- Core
.core.core-info.col-1-3
	.info.flex.core-box-text
		+text-input("name", "NAME").important
		+text-input("level", "LEVEL", "no-spinners")(type="number", min="1", value="1").level.center
		+text-input("class", "CLASS").level-rest
		+text-input("background", "BACKGROUND").col25
		+text-input("species_gender", "SPECIES_GENDER").col25
		+text-input("faction", "FACTION").col25
		+text-input("homeworld", "HOMEWORLD").col25
	.saves.core-box
		h3(data-i18n="SAVING_THROWS")
		.flex-between
			+makeSave("physical")
			+makeSave("mental")
			+makeSave("evasion")
			input(type="hidden", name="attr_homebrew_luck_save", value="0").hider
			+makeSave("luck")
	.menus.core-box
		h3(data-i18n="QUICK_MENUS")
		.menus-content
			button(type="roll", name="roll_Initiative", data-i18n="INITIATIVE", value!="&{template:swn-default} {{charname=@{name}}} {{title=^{INITIATIVE}}} {{ =[[1d8+@{dexterity_mod} &{tracker}]]}}").unstyled-button
			input(type="hidden", name="attr_macro_saves", value="[^{PHYSICAL} (v@{save_physical}),](~save_physical) [^{MENTAL} (v@{save_mental}),](~save_mental) [^{EVASION} (v@{save_evasion})](~save_evasion)")
			button(type="roll", name="roll_Saves_macro", data-i18n="SAVES", value!=`/w &quot;@{character_name}&quot; &{template:swn-default} {{charname=@{name}}} {{title=^{SAVING_THROWS}}} {{buttons=@{macro_saves}}}`).unstyled-button
			input(type="hidden", name="attr_macro_skills" value="[^{ADMINISTER} (-1),](~skill_administer) [^{CONNECT} (-1),](~skill_connect) [^{EXERT} (-1),](~skill_exert) [^{FIX} (-1),](~skill_fix) [^{HEAL} (-1),](~skill_heal) [^{KNOW} (-1),](~skill_know) [^{LEAD} (-1),](~skill_lead) [^{NOTICE} (-1),](~skill_notice) [^{PERFORM} (-1),](~skill_perform) [^{PILOT} (-1),](~skill_pilot) [^{PROGRAM} (-1),](~skill_program) [^{PUNCH} (-1),](~skill_punch) [^{SHOOT} (-1),](~skill_shoot) [^{SNEAK} (-1),](~skill_sneak) [^{STAB} (-1),](~skill_stab) [^{SURVIVE} (-1),](~skill_survive) [^{TALK} (-1),](~skill_talk) [^{TRADE} (-1),](~skill_trade) [^{WORK} (-1)](~skill_work)")
			button(type="roll", name="roll_Skills_macro", data-i18n="SKILLS", value!=`/w &quot;@{character_name}&quot; &{template:swn-default} {{charname=@{name}}} {{title=^{SKILLS}}} {{buttons=@{macro_skills}}}`).unstyled-button
			input(type="hidden", name="attr_macro_weapons")
			button(type="roll", name="roll_Weapons_macro", data-i18n="WEAPONS", value!=`/w &quot;@{character_name}&quot; &{template:swn-default} {{charname=@{name}}} {{title=^{WEAPONS}}} {{buttons=@{macro_weapons}}}`).unstyled-button
			input(type="hidden", name="attr_macro_psionics" value="[^{BIOPSIONICS} (-1),](~skill_biopsionics) [^{METAPSIONICS} (-1),](~skill_metapsionics) [^{PRECOGNITION} (-1),](~skill_precognition) [^{TELEKINESIS} (-1),](~skill_telekinesis) [^{TELEPATHY} (-1),](~skill_telepathy) [^{TELEPORTATION} (-1)](~skill_teleportation)")
			button(type="roll", name="roll_Psionics_macro", data-i18n="PSIONICS", value!=`/w &quot;@{character_name}&quot; &{template:swn-default} {{charname=@{name}}} {{title=^{PSYCHIC_SKILLS_TECHNIQUES}}} {{buttons=@{macro_psionics}}}`).unstyled-button.super-psionics.super
			input(type="hidden", name="attr_macro_magic")
			button(type="roll", name="roll_Magic_macro", data-i18n="MAGIC", value!=`/w &quot;@{character_name}&quot; &{template:swn-default} {{charname=@{name}}} {{title=^{SPACE_MAGIC}}} {{buttons=@{macro_magic}}}`).unstyled-button.super-magic.super

//- Stats
.core.core-stats.col-1-3
	.main.core-box-text
		h3(data-i18n="CORE_STATISTICS")
		.main-content
			+text-input-duo("HP", "HP_max", false, {value: "0"}).important
				.label
					button.unstyled-button(type="roll", name="roll_HP", data-i18n="HIT_POINTS" value!="&{template:swn-default} {{charname=@{name}}} {{title=^{HIT_POINTS}}} {{ =[[{@{level}d6 + @{level}*@{constitution_mod}[CON] + @{level}*@{extra_hp_query}, @{hp|max} + 1d1}kh1 ]]}} {{info=^{MAXIMUM_HP_1} @{level}d6 + @{level}&ast;[[@{constitution_mod}[CON] + @{extra_hp_query}]] ^{MAXIMUM_HP_2} [[@{hp|max} + 1]]}}")
			+text-input-duo("strain", "strain_max", "SYSTEM_STRAIN", {value: "10", readonly: true, "data-i18n-title": "CONSTITUTION"})(min="0", value="0")
			+text-input("strain_permanent", "PERMANENT_STRAIN")(type="number", min="0", value="0").center
			+text-input-duo("xp", "xp_next", "XP_NEXT_LEVEL", {min: "0", value: "3"})(min="0", value="0")
			+text-input("AC", "ARMOR_CLASS")(type="number", value="10", readonly, data-i18n-title="AC_DESC").center
			+text-input("attack_bonus", "ATTACK_BONUS")(type="number", min="0", value="0").center
			input(type="hidden", name="attr_setting_heroic_enable", value="0").hider
			+text-input("hp_doom")(type="number").center
				button.unstyled-button(type="roll", name="roll_Doom", data-i18n="DOOM_DAMAGE", data-i18n-title="DEFY_DOOM", value!="&{template:swn-default} {{charname=@{name}}} {{title=^{DEFYING_DOOM}}} {{^{DOOM_DAMAGE}=[[@{level}d@{doom_size}]]}}")
	.attributes.core-box
		table
			thead
				tr
					th
					th(data-i18n="BASE")
					th(data-i18n="BONUS")
					th(data-i18n="MODIFIER")
			tbody
				input(type="hidden", name="attr_str_dex_mod", value="0")
				each attr in attributes
					tr
						td(data-i18n=attr.toUpperCase(), data-i18n-title=`${attr.toUpperCase()}_DESC`)
						td
							input(type="number", name=`attr_${attr}`, value="10").edit
							span(name=`attr_${attr}`).display
						td
							input(type="number", name=`attr_${attr}_bonus`, value="0").edit
							span(name=`attr_${attr}_bonus`).display
						td.mod
							input(type="hidden", name=`attr_${attr}_mod`, value="0").add-plus
							span(name=`attr_${attr}_mod`)
	.resources.core-box-text
		.flex
			h3(data-i18n="RESOURCES")
			+text-input("credits", "CREDITS")(type="number", value="0").credits.center.col50
		fieldset.repeating_resources
			+text-input-duo("resource_count", "resource_count_max", "").display
				.label
					span(name="attr_resource_name")
			.flex-center.edit
				input(type="text", name="attr_resource_name")
				input(type="number", name="attr_resource_count")
				span.slash /
				input(type="number", name="attr_resource_count_max")

.column
	//- Weapons
	.section
		+sectionheader("show_weapons", "WEAPONS")
		.weapons
			.generate.flex-start.edit
				select(name="attr_generate_weapons_source").generate-source
					option(value="", data-i18n="CHOOSE_WEAPON", selected)
					optgroup(data-i18n-label="RANGED_WEAPONS")
						option(value="primitive_bow", data-i18n="PRIMITIVE_BOW")
						option(value="advanced_bow", data-i18n="ADVANCED_BOW")
						option(value="conversion_bow", data-i18n="CONVERSION_BOW")
						option(value="grenade", data-i18n="GRENADE")
						option(value="crude_pistol", data-i18n="CRUDE_PISTOL")
						option(value="musket", data-i18n="MUSKET")
						option(value="revolver", data-i18n="REVOLVER")
						option(value="rifle", data-i18n="RIFLE")
						option(value="shotgun", data-i18n="SHOTGUN")
						option(value="semi_auto_pistol", data-i18n="SEMI_AUTO_PISTOL")
						option(value="submachine_gun", data-i18n="SUBMACHINE_GUN")
						option(value="combat_rifle", data-i18n="COMBAT_RIFLE")
						option(value="combat_shotgun", data-i18n="COMBAT_SHOTGUN")
						option(value="sniper_rifle", data-i18n="SNIPER_RIFLE")
						option(value="void_carbine", data-i18n="VOID_CARBINE")
						option(value="mag_pistol", data-i18n="MAG_PISTOL")
						option(value="mag_rifle", data-i18n="MAG_RIFLE")
						option(value="spike_thrower", data-i18n="SPIKE_THROWER")
						option(value="laser_pistol", data-i18n="LASER_PISTOL")
						option(value="laser_rifle", data-i18n="LASER_RIFLE")
						option(value="thermal_pistol", data-i18n="THERMAL_PISTOL")
						option(value="plasma_projector", data-i18n="PLASMA_PROJECTOR")
						option(value="shear_rifle", data-i18n="SHEAR_RIFLE")
						option(value="thunder_gun", data-i18n="THUNDER_GUN")
						option(value="distortion_cannon", data-i18n="DISTORTION_CANNON")
					optgroup(data-i18n-label="MELEE_WEAPONS")
						option(value="small_primitive_weapon", data-i18n="SMALL_PRIMITIVE_WEAPON")
						option(value="medium_primitive_weapon", data-i18n="MEDIUM_PRIMITIVE_WEAPON")
						option(value="large_primitive_weapon", data-i18n="LARGE_PRIMITIVE_WEAPON")
						option(value="small_advanced_weapon", data-i18n="SMALL_ADVANCED_WEAPON")
						option(value="medium_advanced_weapon", data-i18n="MEDIUM_ADVANCED_WEAPON")
						option(value="large_advanced_weapon", data-i18n="LARGE_ADVANCED_WEAPON")
						option(value="stun_baton", data-i18n="STUN_BATON")
						option(value="suit_ripper", data-i18n="SUIT_RIPPER")
						option(value="punch", data-i18n="PUNCH")
					optgroup(data-i18n-label="HEAVY_WEAPONS")
						option(value="heavy_machine_gun", data-i18n="HEAVY_MACHINE_GUN")
						option(value="rocket_launcher", data-i18n="ROCKET_LAUNCHER")
						option(value="railgun", data-i18n="RAILGUN")
						option(value="anti_vehicle_laser", data-i18n="ANTI_VEHICLE_LASER")
						option(value="hydra_array", data-i18n="HYDRA_ARRAY")
						option(value="vortex_cannon", data-i18n="VORTEX_CANNON")
				span(name="attr_generate_weapons_info").generate-info
				label.generate-button
					input(type="checkbox", name="attr_generate_weapons_button")
					span(data-i18n="ADD")
			fieldset.repeating_weapons
				input(type="hidden", name="attr_weapon_api", value="")
				input(type="hidden", name="attr_weapon_attack_display", value="")
				input(type="hidden", name="attr_weapon_damage_display", value="")
				button(type="roll", name="roll_Attack", value!="&{template:swn-attack} {{charname=@{name}}} {{title=@{weapon_name}}}  {{attack=[[1d20 + @{attack_bonus}[AB] + @{weapon_attack}[Weapon AB] + [[{{@{weapon_skill_bonus},-1}>0}*(@{weapon_skill_bonus}+2) - 2]][Skill] + @{weapon_attribute_mod}[Attribute] @{weapon_burst} @{modifier_query}]]}} {{damage=[[@{weapon_damage} + @{weapon_attribute_mod}[Attribute] + @{weapon_skill_to_damage}[Skill] @{weapon_burst}]]}} {{burst=[[0@{weapon_burst}]]}} @{weapon_shock} {{range=@{weapon_range}}} @{weapon_use_ammo} {{mod=[[0 @{modifier_query}]]}} @{weapon_api}").invisible-button.display
				.display
					span.name.space-after
						span(name="attr_weapon_name").space-after
						span(name="attr_weapon_attack_display")
					span
						| (
						span(name="attr_weapon_damage_display")
						input(type="hidden", name="attr_weapon_range", value="").hide-empty
						span , #[span(data-i18n="RANGE")]:&nbsp;#[span(name="attr_weapon_range")]
						| )
					input(type="hidden", name="attr_weapon_use_ammo", value="0").hider
					span
						| . #[span(data-i18n="AMMO")]:&nbsp;
						input(type="number", name="attr_weapon_ammo").inline-input
						| &nbsp;/&nbsp;
						span(name="attr_weapon_ammo_max")
				.edit.flex-wrap.grey-box-bordered
					+text-input("weapon_name", "NAME").grow.name
					+text-input("weapon_attack", "ATTACK_BONUS_SHORT")(type="number", value="0").ab.center
					+fake-text-input("SKILL").skills-either.weapon-skill.center
						select(name="attr_weapon_skill_bonus")
							option.skills-revised(value="@{skill_exert}", data-i18n="EXERT")
							option.skills-revised(value="@{skill_punch}", data-i18n="PUNCH")
							option.skills-revised(value="@{skill_shoot}", data-i18n="SHOOT", selected)
							option.skills-revised(value="@{skill_stab}", data-i18n="STAB")
							option.skills-first(value="@{skill_combat_energy}", data-i18n="COMBAT_ENERGY")
							option.skills-first(value="@{skill_combat_gunnery}", data-i18n="COMBAT_GUNNERY")
							option.skills-first(value="@{skill_combat_primitive}", data-i18n="COMBAT_PRIMITIVE")
							option.skills-first(value="@{skill_combat_projectile}", data-i18n="COMBAT_PROJECTILE")
							option.skills-first(value="@{skill_combat_psitech}", data-i18n="COMBAT_PSITECH")
							option.skills-first(value="@{skill_combat_unarmed}", data-i18n="COMBAT_UNARMED")
							option(value="@{skill_telekinesis}", data-i18n="TELEKINESIS")
							option(value="0", data-i18n="NONE")
					+text-input("weapon_skill_bonus", "SKILL_AB").weapon-skill.skills-neither.center
					+fake-text-input("ATTRIBUTE").attribute.center
						select(name="attr_weapon_attribute_mod")
							each attr in attributes
								option(value=`@{${attr}_mod}`, data-i18n=`${attr.toUpperCase()}_SHORT`)
							option(value=`@{str_dex_mod}`, data-i18n=`STR_DEX`)
					+fake-text-input("BURST").burst.center
						select(name="attr_weapon_burst")
							option(value="", data-i18n="NO", selected)
							option(value="@{burst_query}", data-i18n="ASK")
							option(value="+ 2[Burst]", data-i18n="ALWAYS")
					+text-input("weapon_damage", "DAMAGE")(value="0").damage.grow.center
					+fake-text-input("+SKILL").skill-to-damage.center
						input(type="checkbox", name="attr_weapon_skill_to_damage", value="@{weapon_skill_bonus}")
					.text-input.shock-damage.center
						input(type="text", name="attr_weapon_shock_damage", value="0")
						label.label
							input(type="checkbox", name="attr_weapon_shock", value!="{{shock=[[@{weapon_shock_damage} + @{weapon_attribute_mod}[Attribute] + @{weapon_skill_to_damage}[Skill]]] ^{SHOCK_DAMAGE_AGAINST_AC_LEQ} @{weapon_shock_ac}!}}")
							span(data-i18n="SHOCK")
					+text-input("weapon_shock_ac", "SHOCK_AC")(type="number", value="10").shock-ac.center
					+text-input("weapon_range", "RANGE").range.grow.center
					+text-input-duo("weapon_ammo", "weapon_ammo_max", "", {value: "0"}).ammo.center
						label.label
							input(type="checkbox", name="attr_weapon_use_ammo", value!="{{ammo=[[0@{weapon_ammo} - (1 @{weapon_burst})]] / @{weapon_ammo|max}}}")
							span(data-i18n="AMMO")
					+text-input("weapon_encumbrance", "ENCUMBRANCE_SHORT")(type="number", value="0").enc.center

	//- Foci
	.section.foci-left
		+foci

	.section.super
		+sectionheader("show_psionics", false)
			span(data-i18n="PSYCHIC_SKILLS_TECHNIQUES").super-psionics-only
			span(data-i18n="SPACE_MAGIC").super-magic-only
			span(data-i18n="PSIONICS_AND_SPACE_MAGIC").super-both
		div
			.tabs.flex.super-both
				label
					input(type="radio", name="attr_tab_super", value="magic")
					span(data-i18n="SPACE_MAGIC")
				label
					input(type="radio", name="attr_tab_super", value="psionics", checked)
					span(data-i18n="PSYCHIC_SKILLS_TECHNIQUES")
			input(type="hidden", name="attr_tab_super", value="psionics").tab-input
			.psionics
				.skills-psionic.skill-container(data-i18n-list="SKILL_ORDER_PSIONIC")
					each skill in skills.psionic
						+makeSkill(skill)
					.skill.skill-points
						.display.flex-center
							span(data-i18n="UNSPENT_PSIONIC_SKILL_POINTS").name
							span(name="attr_unspent_psionic_skill_points").level
						.edit.flex-center
							span(data-i18n="UNSPENT_PSIONIC_SKILL_POINTS").name
							input(type="number", min="0", value="0", name="attr_unspent_psionic_skill_points").level
				.skills-repeating
					fieldset.repeating_psychic-skills
						+makeSkill("", true)
				.psionics-effort.grey-box
					h3(data-i18n="COMMITTED_EFFORT")
					+text-input("psionics_committed_effort_current", "CURRENT")(type="number", value="0", min="0").center
					+text-input("psionics_committed_effort_scene", "SCENE")(type="number", value="0", min="0").center
					+text-input("psionics_committed_effort_day", "DAY")(type="number", value="0", min="0").center
					+text-input("psionics_total_effort", "UNCOMMITTED")(type="number", value="0", readonly, data-i18n-title="MAXIMUM_EFFORT_DESC").center
				.techniques.grey-box.simple-repsection
					.flex-center
						h3(data-i18n="PSYCHIC_TECHNIQUES")
						label.details-button
							input(type="checkbox", name="attr_show_technique_details", value="1", checked)
							span(data-i18n="EXPAND")
					input(type="hidden", name="attr_show_technique_details", value="1").input-details
					fieldset.repeating_techniques
						button.display.invisible-button(name="roll_Technique", type="roll", value!="&{template:swn-default} {{charname=@{name}}} {{info=^{PSYCHIC_TECHNIQUE}}} {{title=@{technique_name}}} {{desc=@{technique_description}}}")
						.display
							.name #[span(name="attr_technique_name")]
							.details #[span(name="attr_technique_description")]
						.edit
							input.name(type="text", name="attr_technique_name", data-i18n-placeholder="TECHNIQUE")
							textarea.details(name="attr_technique_description", data-i18n-placeholder="DESCRIPTION")
			.magic
				.skill-container
					+makeSkill("magic")
					input(type="hidden", name="attr_skill_magic2_name", value="").empty-hider
					+makeSkill("magic2", true)
				.skills-repeating
					fieldset.repeating_magic-skills
						+makeSkill("", true)
				.spells.grey-box.simple-repsection
					.flex-center
						h3(data-i18n="SPELLS")
						label.details-button
							input(type="checkbox", name="attr_show_spell_details", value="1", checked)
							span(data-i18n="EXPAND")
					input(type="hidden", name="attr_show_spell_details", value="1").input-details
					.flex.edit
						.name(data-i18n="NAME")
						.prepared(data-i18n="PREPARED")
						.damage(data-i18n="DAMAGE")
					fieldset.repeating_spells
						button.display.invisible-button(type="roll", name="roll_Spell", value!="&{template:swn-default} {{charname=@{name}}} {{title=@{spell_name}}} {{info=^{SPELL}}} {{desc=@{spell_description}}} {{damage=[[@{spell_damage}]]}}")
						.display
							.name.flex-center
								span(name="attr_spell_name")
								span.prepared #[span(data-i18n="PREPARED")]:
								input.prepared(type="number", name="attr_spell_prepared", value="0", min="0")
							.details #[span(name="attr_spell_description")]
						.edit.flex-wrap
							input.name(type="text", name="attr_spell_name")
							input.prepared(type="number", name="attr_spell_prepared", value="0", min="0")
							input.damage(type="text", name="attr_spell_damage", value="0")
							textarea.details(name="attr_spell_description")

.column
	//- Skills
	.section
		+sectionheader("show_skills", "SKILLS")
		.skills
			.skills-revised.skill-container(data-i18n-list="SKILL_ORDER_REVISED")
				each skill in skills.revised
					+makeSkill(skill)
				.skill.skill-points
					.display.flex-center
						span(data-i18n="UNSPENT_SKILL_POINTS").name
						span(name="attr_unspent_skill_points").level
					.edit.flex-center
						span(data-i18n="UNSPENT_SKILL_POINTS").name
						input(type="number", min="0", value="0", name="attr_unspent_skill_points").level
			.skills-first.skill-container(data-i18n-list="SKILL_ORDER_FIRST")
				each skill in skills.first
					+makeSkill(skill, !!customSkills[skill], customSkills[skill])
				.skill.skill-points
					.display.flex-center
						span(data-i18n="UNSPENT_SKILL_POINTS").name
						span(name="attr_unspent_skill_points").level
					.edit.flex-center
						span(data-i18n="UNSPENT_SKILL_POINTS").name
						input(type="number", min="0", value="0", name="attr_unspent_skill_points").level
			input(type="hidden", name="attr_homebrew_extra_skills", value="0").hider
			.skills-repeating
				fieldset.repeating_skills
					+makeSkill("", true)
			.skill-blurb.edit(data-i18n="SKILL_BLURB")

	//- Foci
	.section.foci-right
		+foci

//- Gear
.section.col-1-3
	+sectionheader("show_gear", "GEAR")
	.gear.halfgrid
		.equipment.column
			.grey-box.readied-stowed.flex-center
				h3(data-i18n="EQUIPMENT")
				input(type="hidden", name="attr_gear_readied_over", value="0").input-gear-over
				+text-input-duo("gear_readied", "gear_readied_max", "READIED", {value: "5", readonly: true, "data-i18n-title": "STRENGTH/2"})(value="0", readonly)
				input(type="hidden", name="attr_gear_stowed_over", value="0").input-gear-over
				+text-input-duo("gear_stowed", "gear_stowed_max", "STOWED", {value: "10", readonly: true, "data-i18n-title": "STRENGTH"})(value="0", readonly)
				+text-input("credits", "CREDITS")(value="0", min="0", type="number").center
				+text-input("credits_owed", "CREDITS_OWED")(value="0", min="0", type="number").center
			.grey-box
				.table-header.gear-grid
					.name(data-i18n="NAME")
					.enc(data-i18n="ENCUMBRANCE_SHORT")
					.status(data-i18n="STATUS")
				fieldset.repeating_weapons
					input(type="hidden", name="attr_weapon_encumbrance", value="0").hider
					.gear-grid
						+text-input("weapon_name")(readonly).name
						+text-input("weapon_encumbrance")(type="number", value="0").enc
						+fake-text-input().status
							select.status(name="attr_weapon_status")
								option(value="", data-i18n="OTHER", selected)
								option(value="READIED", data-i18n="READIED")
								option(value="STOWED", data-i18n="STOWED")
				fieldset.repeating_gear
					.gear-grid
						+text-input("gear_name")(data-i18n-placeholder="ITEM").name
						+text-input("gear_encumbrance")(type="number", value="0").enc
						+fake-text-input().status
							select.status(name="attr_gear_status")
								option(value="", data-i18n="OTHER", selected)
								option(value="READIED", data-i18n="READIED")
								option(value="STOWED", data-i18n="STOWED")
			.grey-box.other
				h3(data-i18n="OTHER_EQUIPMENT")
				textarea(name="attr_gear_other").other-gear
		.column
			.armor.grey-box
				.flex-center
					h3(data-i18n="ARMOR")
					.total-ac  #[span(data-i18n="AC")] #[span(name="attr_AC")]
				.generate.flex-start.edit
					select(name="attr_generate_armor_source").generate-source
						option(value="", data-i18n="CHOOSE_ARMOR", selected)
						optgroup(data-i18n-label="PRIMITIVE")
							option(value="shield", data-i18n="SHIELD")
							option(value="leather_jacks_thick_hides_quilted_armor", data-i18n="LEATHER_JACKS_THICK_HIDES_QUILTED_ARMOR")
							option(value="cuirass_brigandine_linothorax_half_plate", data-i18n="CUIRASS_BRIGANDINE_LINOTHORAX_HALF_PLATE")
							option(value="full_plate_layered_mail", data-i18n="FULL_PLATE_LAYERED_MAIL")
						optgroup(data-i18n-label="STREET")
							option(value="warpaint", data-i18n="WARPAINT")
							option(value="armored_undersuit", data-i18n="ARMORED_UNDERSUIT")
							option(value="secure_clothing", data-i18n="SECURE_CLOTHING")
							option(value="armored_vacc_suit", data-i18n="ARMORED_VACC_SUIT")
							option(value="deflector_array", data-i18n="DEFLECTOR_ARRAY")
						optgroup(data-i18n-label="COMBAT")
							option(value="force_pavis", data-i18n="FORCE_PAVIS")
							option(value="security_armor", data-i18n="SECURITY_ARMOR")
							option(value="woven_body_armor", data-i18n="WOVEN_BODY_ARMOR")
							option(value="combat_field_uniform", data-i18n="COMBAT_FIELD_UNIFORM")
							option(value="icarus_harness", data-i18n="ICARUS_HARNESS")
						optgroup(data-i18n-label="POWERED")
							option(value="vestimentum", data-i18n="VESTIMENTUM")
							option(value="assault_suit", data-i18n="ASSAULT_SUIT")
							option(value="storm_armor", data-i18n="STORM_ARMOR")
							option(value="field_emitter_panoply", data-i18n="FIELD_EMITTER_PANOPLY")
					span(name="attr_generate_armor_info").generate-info
					label.generate-button
						input(type="checkbox", name="attr_generate_armor_button")
						span(data-i18n="ADD")
				.table-header.armor-grid
					.active.center(data-i18n="ACTIVE?")
					.name(data-i18n="NAME")
					.ac(data-i18n="AC")
					.type(data-i18n="TYPE")
					.enc(data-i18n="ENCUMBRANCE_SHORT")
					.status(data-i18n="STATUS")
				fieldset.repeating_armor
					.armor-grid
						+fake-text-input().active.center
							input(type="checkbox", name="attr_armor_active", value="1")
						+text-input("armor_name").name
						+text-input("armor_ac")(type="number", value="0").ac
						+fake-text-input().type
							select(name="attr_armor_type")
								option(value="none", data-i18n="NONE")
								option(value="PRIMITIVE", data-i18n="PRIMITIVE")
								option(value="STREET", data-i18n="STREET", selected)
								option(value="COMBAT", data-i18n="COMBAT")
								option(value="POWERED", data-i18n="POWERED")
								option(value="SHIELD", data-i18n="SHIELD")
						+text-input("armor_encumbrance")(type="number", value="0").enc
						+fake-text-input().status
							select(name="attr_armor_status")
								option(value="", data-i18n="OTHER", selected)
								option(value="READIED", data-i18n="READIED")
								option(value="STOWED", data-i18n="STOWED")
			.cyberware.simple-repsection.grey-box
				.flex-center
					h3(data-i18n="CYBERWARE")
					label.details-button
						input(type="checkbox", name="attr_show_cyberware_details", value="1", checked)
						span(data-i18n="EXPAND")
				.generate.flex-start.edit
					select(name="attr_generate_cyberware_source").generate-source
						option(value="", data-i18n="CHOOSE_CYBERWARE", selected)
						option(value="adrenal_suppression_pump", data-i18n="ADRENAL_SUPPRESSION_PUMP")
						option(value="bioadaptation_augments", data-i18n="BIOADAPTATION_AUGMENTS")
						option(value="body_arsenal_array", data-i18n="BODY_ARSENAL_ARRAY")
						option(value="body_sculpting", data-i18n="BODY_SCULPTING")
						option(value="dermal_armor", data-i18n="DERMAL_ARMOR")
						option(value="drone_control_link", data-i18n="DRONE_CONTROL_LINK")
						option(value="eelskin_capacitor_mesh", data-i18n="EELSKIN_CAPACITOR_MESH")
						option(value="gecko_anchors", data-i18n="GECKO_ANCHORS")
						option(value="ghost_talker_transceiver", data-i18n="GHOST_TALKER_TRANSCEIVER")
						option(value="holdout_cavity", data-i18n="HOLDOUT_CAVITY")
						option(value="holoskin_emitter", data-i18n="HOLOSKIN_EMITTER")
						option(value="identity_submersion_trigger", data-i18n="IDENTITY_SUBMERSION_TRIGGER")
						option(value="immunofiltration_systems", data-i18n="IMMUNOFILTRATION_SYSTEMS")
						option(value="induced_coma_trigger", data-i18n="INDUCED_COMA_TRIGGER")
						option(value="neurointruder_alert", data-i18n="NEUROINTRUDER_ALERT")
						option(value="panspectral_optics", data-i18n="PANSPECTRAL_OPTICS")
						option(value="pressure_sheathing", data-i18n="PRESSURE_SHEATHING")
						option(value="prosthetic_limb", data-i18n="PROSTHETIC_LIMB")
						option(value="revenant_wiring", data-i18n="REVENANT_WIRING")
						option(value="slowtime_window", data-i18n="SLOWTIME_WINDOW")
						option(value="stabilization_overrides", data-i18n="STABILIZATION_OVERRIDES")
						option(value="tagger_nanites", data-i18n="TAGGER_NANITES")
						option(value="toxin_injector", data-i18n="TOXIN_INJECTOR")
						option(value="twitchlock_actuators", data-i18n="TWITCHLOCK_ACTUATORS")
					span(name="attr_generate_cyberware_info").generate-info
					label.generate-button
						input(type="checkbox", name="attr_generate_cyberware_button")
						span(data-i18n="ADD")
				input(type="hidden", name="attr_show_cyberware_details", value="1").input-details
				fieldset.repeating_cyberware
					button.display.invisible-button(name="roll_Cyberware", type="roll", value!="&{template:swn-default} {{charname=@{name}}} {{title=@{cyberware_name}}} {{info=^{CYBERWARE}; @{cyberware_strain} ^{STRAIN}}} {{desc=@{cyberware_description}}}")
					.display
						.name.flex-between
							span(name="attr_cyberware_name")
							span #[span(name="attr_cyberware_strain")] #[span(data-i18n="STRAIN").lower]
						.details #[span(name="attr_cyberware_description")]
					.edit.flex-center
						input(type="text", name="attr_cyberware_name").name
						span #[span(data-i18n="STRAIN_COST")]:
						input(type="number", name="attr_cyberware_strain", value="0").strain
						textarea(name="attr_cyberware_description", data-i18n-placeholder="DESCRIPTION").details

//- Misc
.section.col-1-3
	+sectionheader("show_misc", "MISCELLANEOUS")
	.misc
		.thirdsgrid.repeating-flex-row
			.goals.grey-box.col-1-3
				h3(data-i18n="GOALS")
				fieldset.repeating_goals
					input(type="text", name="attr_goal_name")
					input(type="number", min="0", data-i18n-placeholder="XP", name="attr_goal_xp")
			.languages.grey-box
				h3(data-i18n="LANGUAGES")
				fieldset.repeating_languages
					input(type="text", name="attr_language")
		textarea.notes(name="attr_notes", data-i18n-placeholder="NOTES")
